---
import Title from "@/components/global/Title.astro";
import AnimatedList from "@/components/services/AnimatedList.astro";
import ServiceCard from "@/components/services/ServiceCard.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const services = [
	{
		id: "websites",
		title: lang === "it" ? "Siti Web" : "Websites",
		price: "â‚¬750+",
		description: lang === "it" 
			? "Siti web moderni e responsive con React, Next.js e ottimizzazione SEO. Design personalizzato e performance ottimizzate."
			: "Modern responsive websites with React, Next.js and SEO optimization. Custom design and optimized performance.",
		features: lang === "it" 
			? ["Design responsive", "Ottimizzazione SEO", "Performance elevate", "CMS integrato", "Analytics", "Supporto tecnico"]
			: ["Responsive design", "SEO optimization", "High performance", "Integrated CMS", "Analytics", "Technical support"],
		icon: "â–¡"
	},
	{
		id: "webapps",
		title: lang === "it" ? "Web App" : "Web Apps", 
		price: "â‚¬1,400+",
		description: lang === "it"
			? "Applicazioni web complesse con dashboard, e-commerce e automazioni business. Tecnologie moderne e scalabili."
			: "Complex web applications with dashboards, e-commerce and business automation. Modern and scalable technologies.",
		features: lang === "it"
			? ["Dashboard personalizzate", "E-commerce", "Automazioni", "Database integrati", "API REST", "Sicurezza avanzata"]
			: ["Custom dashboards", "E-commerce", "Automation", "Integrated databases", "REST APIs", "Advanced security"],
		icon: "â—‹"
	},
	{
		id: "mobile",
		title: lang === "it" ? "App Mobile" : "Mobile Apps",
		price: "â‚¬2,000+", 
		description: lang === "it"
			? "App native per iOS e Android con React Native. Esperienza utente ottimizzata e integrazione con servizi cloud."
			: "Native iOS and Android apps with React Native. Optimized user experience and cloud services integration.",
		features: lang === "it"
			? ["iOS e Android", "React Native", "Push notifications", "Integrazione cloud", "Offline support", "App Store deploy"]
			: ["iOS and Android", "React Native", "Push notifications", "Cloud integration", "Offline support", "App Store deploy"],
		icon: "â–³"
	},
	{
		id: "ai",
		title: lang === "it" ? "AI & RAG" : "AI & RAG",
		price: "â‚¬2,500+",
		description: lang === "it"
			? "Soluzioni AI avanzate con chatbot, automazioni intelligenti e analisi predittive. Integrazione con modelli LLM."
			: "Advanced AI solutions with chatbots, intelligent automation and predictive analysis. LLM model integration.",
		features: lang === "it"
			? ["Chatbot AI", "Automazioni intelligenti", "Analisi predittive", "RAG systems", "LLM integration", "Machine Learning"]
			: ["AI Chatbots", "Intelligent automation", "Predictive analysis", "RAG systems", "LLM integration", "Machine Learning"],
		icon: "â—‡"
	}
];
---

<section class="section min-h-screen">
	<div class="col-span-full">
		<Title 
			title={t("services.title")} 
			subtitle={t("services.subtitle")} 
			class="pt-20 pb-16 text-center" 
		/>
	</div>

	<div class="col-span-full">
		<div class="services-layout">
			<div class="services-description">
				<h2 class="services-subtitle">
					{lang === "it" ? "I nostri servizi" : "Our Services"}
				</h2>
				<p class="services-intro">
					{lang === "it" 
						? "Scopri la nostra gamma completa di servizi digitali. Clicca su un servizio per vedere tutti i dettagli, le caratteristiche incluse e i prezzi."
						: "Discover our complete range of digital services. Click on a service to see all details, included features and pricing."
					}
				</p>
				<p class="services-instructions">
					{lang === "it" 
						? "ðŸ’¡ Usa le frecce â†‘â†“ per navigare o clicca direttamente"
						: "ðŸ’¡ Use arrow keys â†‘â†“ to navigate or click directly"
					}
				</p>
			</div>

			<div class="services-list-wrapper">
				<AnimatedList 
					services={services}
					showGradients={true}
					enableArrowNavigation={true}
					className="services-animated-list"
				/>
			</div>
		</div>
	</div>

	<div class="col-span-full">
		<div class="cta-section">
			<div class="cta-content">
				<h2 class="cta-title">
					{lang === "it" ? "Pronto a iniziare il tuo progetto?" : "Ready to start your project?"}
				</h2>
				<p class="cta-description">
					{lang === "it" 
						? "Contattaci per una consulenza gratuita e scopri come possiamo aiutarti a raggiungere i tuoi obiettivi digitali."
						: "Contact us for a free consultation and discover how we can help you achieve your digital goals."
					}
				</p>
				<div class="cta-button-wrapper">
					<a 
						href={lang === "it" ? "/it/contact" : "/contact"}
						class="cta-button"
					>
						{lang === "it" ? "Contattaci" : "Contact Us"}
					</a>
				</div>
			</div>
		</div>
	</div>
</section>

<!-- Service Card Modal -->
<ServiceCard lang={lang} />

<style>
	.services-layout {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 3rem;
		margin-bottom: 4rem;
		width: 100vw;
		margin-left: calc(-50vw + 50%);
		padding: 0 2rem;
	}

	.services-description {
		text-align: center;
		max-width: 600px;
	}

	.services-subtitle {
		font-size: 2rem;
		font-weight: bold;
		color: white;
		margin: 0 0 1.5rem 0;
		font-family: 'Inter', sans-serif;
	}

	.services-intro {
		color: rgba(255, 255, 255, 0.8);
		font-size: 1.125rem;
		line-height: 1.6;
		margin: 0 0 1rem 0;
		font-family: 'Inter', sans-serif;
	}

	.services-instructions {
		margin: 0;
		color: rgba(255, 255, 255, 0.7);
		font-size: 0.875rem;
		font-family: 'Inter', sans-serif;
	}

	.services-list-wrapper {
		width: 100%;
		max-width: 800px;
	}

	/* Desktop Layout */
	@media (min-width: 1024px) {
		.services-layout {
			flex-direction: row;
			align-items: flex-start;
			justify-content: center;
			gap: 6rem;
			padding: 0 8rem;
		}

		.services-description {
			text-align: left;
			flex-shrink: 0;
			width: 400px;
		}

		.services-list-wrapper {
			flex: 1;
			max-width: none;
		}
	}

	/* Large Desktop */
	@media (min-width: 1400px) {
		.services-layout {
			gap: 8rem;
			padding: 0 12rem;
		}
	}

	/* Tablet and Mobile */
	@media (max-width: 1023px) {
		.services-description {
			text-align: center;
			max-width: 100%;
		}

		.services-list-wrapper {
			max-width: 600px;
		}
	}

	@media (max-width: 768px) {
		.services-layout {
			gap: 2rem;
		}

		.services-subtitle {
			font-size: 1.75rem;
		}

		.services-intro {
			font-size: 1rem;
		}
	}

	@media (max-width: 480px) {
		.services-subtitle {
			font-size: 1.5rem;
		}

		.services-intro {
			font-size: 0.875rem;
		}
	}

	/* CTA Section */
	.cta-section {
		width: 100vw;
		margin-left: calc(-50vw + 50%);
		margin-top: 5rem;
		padding: 4rem 2rem;
		border-top: 1px solid rgba(255, 255, 255, 0.1);
		background: rgba(0, 0, 0, 0.3);
	}

	.cta-content {
		max-width: 800px;
		margin: 0 auto;
		text-align: center;
	}

	.cta-title {
		font-size: 2rem;
		font-weight: bold;
		color: white;
		margin: 0 0 1.5rem 0;
		font-family: 'Inter', sans-serif;
	}

	.cta-description {
		color: rgba(255, 255, 255, 0.8);
		font-size: 1.125rem;
		line-height: 1.6;
		margin: 0 0 2rem 0;
		font-family: 'Inter', sans-serif;
	}

	.cta-button-wrapper {
		display: flex;
		justify-content: center;
	}

	.cta-button {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		background: white;
		color: black;
		font-family: 'Inter', monospace;
		font-weight: bold;
		padding: 1rem 2rem;
		border-radius: 9999px;
		transition: all 0.3s ease;
		text-transform: uppercase;
		font-size: 0.875rem;
		text-decoration: none;
	}

	.cta-button:hover {
		background: rgba(255, 255, 255, 0.9);
		transform: translateY(-2px);
		box-shadow: 0 8px 24px rgba(255, 255, 255, 0.2);
	}

	/* CTA Responsive */
	@media (min-width: 1024px) {
		.cta-section {
			padding: 6rem 8rem;
		}

		.cta-title {
			font-size: 2.5rem;
		}
	}

	@media (min-width: 1400px) {
		.cta-section {
			padding: 6rem 12rem;
		}

		.cta-title {
			font-size: 3rem;
		}
	}

	@media (max-width: 768px) {
		.cta-section {
			margin-top: 3rem;
			padding: 3rem 1.5rem;
		}

		.cta-title {
			font-size: 1.75rem;
		}

		.cta-description {
			font-size: 1rem;
		}

		.cta-button {
			padding: 0.875rem 1.5rem;
			font-size: 0.8125rem;
		}
	}

	@media (max-width: 480px) {
		.cta-section {
			padding: 2rem 1rem;
		}

		.cta-title {
			font-size: 1.5rem;
			margin-bottom: 1rem;
		}

		.cta-description {
			font-size: 0.875rem;
			margin-bottom: 1.5rem;
		}

		.cta-button {
			padding: 0.75rem 1.25rem;
			font-size: 0.75rem;
			width: 100%;
			max-width: 280px;
		}
	}
</style>

<script>
	// Service data for the modal
	const servicesData = {
		websites: {
			id: "websites",
			title: document.documentElement.lang === "it" ? "Siti Web" : "Websites",
			price: "â‚¬750+",
			description: document.documentElement.lang === "it" 
				? "Siti web moderni e responsive con React, Next.js e ottimizzazione SEO. Design personalizzato e performance ottimizzate."
				: "Modern responsive websites with React, Next.js and SEO optimization. Custom design and optimized performance.",
			features: document.documentElement.lang === "it" 
				? ["Design responsive", "Ottimizzazione SEO", "Performance elevate", "CMS integrato", "Analytics", "Supporto tecnico"]
				: ["Responsive design", "SEO optimization", "High performance", "Integrated CMS", "Analytics", "Technical support"],
			icon: "â–¡"
		},
		webapps: {
			id: "webapps",
			title: document.documentElement.lang === "it" ? "Web App" : "Web Apps",
			price: "â‚¬1,400+",
			description: document.documentElement.lang === "it"
				? "Applicazioni web complesse con dashboard, e-commerce e automazioni business. Tecnologie moderne e scalabili."
				: "Complex web applications with dashboards, e-commerce and business automation. Modern and scalable technologies.",
			features: document.documentElement.lang === "it"
				? ["Dashboard personalizzate", "E-commerce", "Automazioni", "Database integrati", "API REST", "Sicurezza avanzata"]
				: ["Custom dashboards", "E-commerce", "Automation", "Integrated databases", "REST APIs", "Advanced security"],
			icon: "â—‹"
		},
		mobile: {
			id: "mobile",
			title: document.documentElement.lang === "it" ? "App Mobile" : "Mobile Apps",
			price: "â‚¬2,000+",
			description: document.documentElement.lang === "it"
				? "App native per iOS e Android con React Native. Esperienza utente ottimizzata e integrazione con servizi cloud."
				: "Native iOS and Android apps with React Native. Optimized user experience and cloud services integration.",
			features: document.documentElement.lang === "it"
				? ["iOS e Android", "React Native", "Push notifications", "Integrazione cloud", "Offline support", "App Store deploy"]
				: ["iOS and Android", "React Native", "Push notifications", "Cloud integration", "Offline support", "App Store deploy"],
			icon: "â–³"
		},
		ai: {
			id: "ai",
			title: document.documentElement.lang === "it" ? "AI & RAG" : "AI & RAG",
			price: "â‚¬2,500+",
			description: document.documentElement.lang === "it"
				? "Soluzioni AI avanzate con chatbot, automazioni intelligenti e analisi predittive. Integrazione con modelli LLM."
				: "Advanced AI solutions with chatbots, intelligent automation and predictive analysis. LLM model integration.",
			features: document.documentElement.lang === "it"
				? ["Chatbot AI", "Automazioni intelligenti", "Analisi predittive", "RAG systems", "LLM integration", "Machine Learning"]
				: ["AI Chatbots", "Intelligent automation", "Predictive analysis", "RAG systems", "LLM integration", "Machine Learning"],
			icon: "â—‡"
		}
	};

	// Enhanced Service Card functionality
	class ServiceCardManager {
		constructor() {
			this.overlay = document.getElementById('service-card-overlay');
			this.init();
		}

		init() {
			// Listen for service selection
			window.addEventListener('serviceSelected', (e) => {
				const serviceId = e.detail.serviceId;
				this.showService(serviceId);
			});
		}

		showService(serviceId) {
			const service = servicesData[serviceId];
			if (!service || !this.overlay) return;

			// Update the modal content
			this.updateModalContent(service);
			
			// Show the modal
			this.overlay.classList.add('visible');
			document.body.style.overflow = 'hidden';
		}

		updateModalContent(service) {
			// Update service header
			const iconElement = document.getElementById('service-icon-large');
			const titleElement = document.getElementById('service-title');
			const priceElement = document.getElementById('service-price');
			
			if (iconElement) iconElement.textContent = service.icon;
			if (titleElement) titleElement.textContent = service.title;
			if (priceElement) priceElement.textContent = service.price;
			
			// Update description
			const descriptionElement = document.getElementById('service-description');
			if (descriptionElement) descriptionElement.textContent = service.description;
			
			// Update features
			const featuresGrid = document.getElementById('features-grid');
			if (featuresGrid) {
				featuresGrid.innerHTML = service.features.map(feature => `
					<div class="feature-item">
						<span class="feature-icon">âœ“</span>
						<span class="feature-text">${feature}</span>
					</div>
				`).join('');
			}
		}
	}

	// Initialize when DOM is ready
	document.addEventListener('DOMContentLoaded', () => {
		new ServiceCardManager();
	});
</script>
