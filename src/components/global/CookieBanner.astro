---
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
// const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<div id="cookie-banner" class="cookie-banner">
	<div class="cookie-container">
		<div class="cookie-content">
			<div class="cookie-icon">
				<svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
					<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
				</svg>
			</div>
			<div class="cookie-text">
				{lang === "it" ? (
					<p>
						Utilizziamo cookie tecnici per migliorare la tua esperienza di navigazione. 
						<a href={translatePath("/cookies/")} class="cookie-link">
							Scopri di pi√π
						</a>
					</p>
				) : (
					<p>
						We use technical cookies to improve your browsing experience. 
						<a href={translatePath("/cookies/")} class="cookie-link">
							Learn more
						</a>
					</p>
				)}
			</div>
		</div>
		<div class="cookie-actions">
			<button id="cookie-accept" class="cookie-btn cookie-btn-accept">
				{lang === "it" ? "Accetta" : "Accept"}
			</button>
			<button id="cookie-decline" class="cookie-btn cookie-btn-decline">
				{lang === "it" ? "Rifiuta" : "Decline"}
			</button>
		</div>
	</div>
</div>

<style>
	.cookie-banner {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		background: rgba(0, 0, 0, 0.95);
		border-top: 1px solid rgba(255, 255, 255, 0.1);
		backdrop-filter: blur(20px);
		transform: translateY(100%);
		transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.cookie-banner.show {
		transform: translateY(0);
	}

	.cookie-container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 1.5rem 2rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 2rem;
	}

	.cookie-content {
		display: flex;
		align-items: center;
		gap: 1rem;
		flex: 1;
	}

	.cookie-icon {
		color: rgba(255, 255, 255, 0.7);
		flex-shrink: 0;
	}

	.cookie-text {
		color: rgba(255, 255, 255, 0.9);
		font-size: 0.9rem;
		line-height: 1.5;
		font-family: 'Inter', sans-serif;
		font-weight: 400;
	}

	.cookie-text p {
		margin: 0;
	}

	.cookie-link {
		color: white;
		text-decoration: none;
		border-bottom: 1px solid rgba(255, 255, 255, 0.3);
		transition: all 0.3s ease;
		font-weight: 500;
	}

	.cookie-link:hover {
		border-bottom-color: rgba(255, 255, 255, 0.6);
	}

	.cookie-actions {
		display: flex;
		gap: 1rem;
		flex-shrink: 0;
	}

	.cookie-btn {
		padding: 0.75rem 1.5rem;
		border: none;
		border-radius: 0.5rem;
		font-family: 'Inter', sans-serif;
		font-weight: 500;
		font-size: 0.875rem;
		cursor: pointer;
		transition: all 0.3s ease;
		white-space: nowrap;
	}

	.cookie-btn-accept {
		background: white;
		color: black;
	}

	.cookie-btn-accept:hover {
		background: rgba(255, 255, 255, 0.9);
		transform: translateY(-1px);
	}

	.cookie-btn-decline {
		background: rgba(255, 255, 255, 0.1);
		color: white;
		border: 1px solid rgba(255, 255, 255, 0.2);
	}

	.cookie-btn-decline:hover {
		background: rgba(255, 255, 255, 0.15);
		border-color: rgba(255, 255, 255, 0.3);
		transform: translateY(-1px);
	}

	/* Mobile Layout */
	@media (max-width: 767px) {
		.cookie-container {
			flex-direction: column;
			align-items: stretch;
			gap: 1.5rem;
			padding: 1.5rem;
		}

		.cookie-content {
			text-align: center;
		}

		.cookie-text {
			font-size: 0.85rem;
		}

		.cookie-actions {
			justify-content: center;
		}

		.cookie-btn {
			flex: 1;
			max-width: 120px;
		}
	}

	@media (max-width: 480px) {
		.cookie-container {
			padding: 1.25rem;
		}

		.cookie-actions {
			flex-direction: column;
			gap: 0.75rem;
		}

		.cookie-btn {
			max-width: none;
		}
	}
</style>

<script>
	function initCookieBanner() {
		const banner = document.getElementById('cookie-banner');
		const acceptBtn = document.getElementById('cookie-accept');
		const declineBtn = document.getElementById('cookie-decline');
		
		if (!banner || !acceptBtn || !declineBtn) return;

		// Check if user has already made a choice
		const cookieConsent = localStorage.getItem('cookie-consent');
		
		if (!cookieConsent) {
			// Show banner after a short delay
			setTimeout(() => {
				banner.classList.add('show');
			}, 1000);
		}

		// Handle accept
		acceptBtn.addEventListener('click', () => {
			localStorage.setItem('cookie-consent', 'accepted');
			hideBanner();
			// Enable analytics or other tracking here
			console.log('Cookies accepted');
		});

		// Handle decline
		declineBtn.addEventListener('click', () => {
			localStorage.setItem('cookie-consent', 'declined');
			hideBanner();
			// Disable analytics or other tracking here
			console.log('Cookies declined');
		});

		function hideBanner() {
			banner.classList.remove('show');
		}
	}

	// Initialize on page load
	document.addEventListener('DOMContentLoaded', initCookieBanner);
	
	// Re-initialize on page navigation (for Astro)
	document.addEventListener('astro:page-load', initCookieBanner);
</script> 